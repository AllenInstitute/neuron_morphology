version: 2.1

# Reusable commands common to all jobs
# conda env always created as ~/.conda_envs/build_env
commands:
  create_conda_env:
    description: 'creates a conda env for testing'
    parameters:
      python_version:
        type: string
        default: '3.8'
    steps:
      - run:
          name: create conda env
          command: |
            if [ ! -d ~/.conda_envs/build_env]; then
              conda create -n build_env -c conda-forge fenics mshr \
              python=<<parameters.python_version>> \
              -p ~/.conda_envs/
            fi

  pip_install_requirements:
    description: 'pip installs requirements and repository'
    steps:
      - run:
          name: pip install requirements
          command: |
            conda activate ~/.conda_envs/build_env
            pip install -r requirements.txt -U
            pip install -r test_requirements.txt -U
            pip install .

  run_tests:
    description: 'runs pytest and coverage'
    steps:
      - run:
          name: run tests
          command: |
            conda activate ~/.conda_envs/build_env
            pytest tests/ --junitxml=test-reports/coverage_report.xml --cov-config=.coveragerc --cov=neuron_morphology
            codecov -t ${codecov_key}
      - store_artifacts:
          path: test-reports
          destination: test-reports


# need orbs for windows testing
orbs:
  win: circleci/windows@2.2.0
  # https://circleci.com/orbs/registry/orb/circleci/windows for info on what's included


# executors to run tests on
executors:
  #windows executor provided by circleci/windows@2.2.0 orb
  windows: win/default 

  linux:
    docker:
      - image: continuumio/miniconda3:4.7.12

  mac:
    macos:
      xcode: "11.3.0"


jobs:
  test_linux:
    executor: linux
    working_directory: ~/repo
    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-linux_cache-{{ checksum "requirements.txt" }}-{{ checksum "test_requirements.txt"}}
            # fallback to using the latest cache if no exact match is found
            - v1-linux_cache-

      - run: echo ". /opt/conda/etc/profile.d/conda.sh" >> ${BASH_ENV}
      - create_conda_env
      - pip_install_requirements
      - run_tests

      - save_cache:
          paths:
            - ~/.conda_envs/
          key: v1-linux_cache-{{ checksum "requirements.txt" }}-{{ checksum "test_requirements.txt"}}


  test_windows:
    executor: win/default
    working_directory: ~/repo
    steps:
      - checkout


  test_mac:
    executor: mac
    working_directory: ~/repo
    steps:
      - checkout



  deploy_pypi:
    docker:
      - image: circleci/python:3.7
    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: configure pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = $PYPI_USERNAME" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc

      - run:
          name: setup_venv
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -U twine setuptools wheel

      - run:
          name: check_version
          command: |
            . venv/bin/activate
            python setup.py check_version -e $CIRCLE_TAG

      - run:
          name: build wheels
          command: |
            . venv/bin/activate
            python setup.py sdist
            python setup.py bdist_wheel

      - run:
          name: deploy
          command: |
            . venv/bin/activate
            twine upload dist/* --verbose --config-file ~/.pypirc


workflows:
  Windows_Workflow:
    jobs:
      - test_linux:
          filters:
            tags: 
              only: /v\d+(\.\d+)*(.[A-Za-z][0-9A-Za-z]*)*/
            branches:
              ignore: /.*/
      - test_mac:
          filters:
            tags: 
              only: /v\d+(\.\d+)*(.[A-Za-z][0-9A-Za-z]*)*/
            branches:
              ignore: /.*/
      - deploy_pypi:
          requires:
            - test_linux
            - test_mac
          filters:
            tags: 
              only: /v\d+(\.\d+)*(.[A-Za-z][0-9A-Za-z]*)*/
            branches:
              ignore: /.*/

